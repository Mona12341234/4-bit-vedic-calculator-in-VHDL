library ieee;
use ieee.std_logic_1164.all; 
entity mux2to1 is
  port (w0, w1, s : in std_logic;
     f : out std_logic); 
end mux2to1;
architecture behaviour of mux2to1 is 
begin
  process (w0, w1, s)
  begin
    if s = ‘0’ then
      f <= w0;
    else
      f <= w1;
    end if;
  end process;
end behaviour;

library ieee;
use ieee.std_logic_1164.all; 
entity calculator is
port(A,B : in std_logic_vector(3 downto 0);
Q : out std_logic_vector(7 downto 0));
end calculator
architecture arch of calculator is
component mux2to1
port (w0, w1, s : in std_logic;
     f : out std_logic); 
	  end component;
component fa4
port( OP: in std_logic;
          A,B  : in std_logic_vector(3 downto 0);
          R  : out std_logic_vector(3 downto 0);
          Cout, OVERFLOW : out std_logic);
			 end component;
signal Si1,Si2: std_logic_vector(3 downto 0):="0000";
begin
u1: fa4:port map(A,B,si1);
u2: mux2to1: port map(sil,si2,Q);
end arch;
